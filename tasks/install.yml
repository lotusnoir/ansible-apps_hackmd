---
- name: "Check for hackmd install dir"
  ansible.builtin.stat:
    path: "{{ hackmd_install_dir }}"
  changed_when: false
  register: hackmd_install

- name: "Install tasks"
  when: not hackmd_install.stat.exists
  block:
    - name: "Install requirements"
      ansible.builtin.package:
        name: [make, git, bzip2]
        state: present

    - name: "Install requierements"
      ansible.builtin.package:
        name: ["ca-certificates", "unzip", "tar"]
        state: present

    - name: "Download hackmd..."
      ansible.builtin.get_url:
        url: '{{ hackmd_url }}'
        dest: /tmp/2.2.0.tar.gz
        timeout: 120
        mode: 0644

    - name: "Ensure install directory exists"
      ansible.builtin.file:
        path: '{{ hackmd_install_dir }}'
        state: directory
        mode: 0755

    - name: "Unarchive hackmd..."
      ansible.builtin.unarchive:
        src: /tmp/{{ hackmd_tgz }}
        dest: '{{ hackmd_install_dir }}'
        extra_opts: [--strip-components=1]
        remote_src: true
        mode: 0755

    #- name: Configure proxy
    #  shell: npm config set proxy {{ http_proxy }}
    #  when: npm_proxy is defined

    - name: Set config user to 0
      ansible.builtin.command: npm config set user 0
      changed_when: false

    - name: Install npm packages (take a while)
      community.general.npm:
        path: "{{ hackmd_install_dir }}/bin/"

    - name: NPM audit fix
      ansible.builtin.command: npm audit fix
      args:
        chdir: "{{ hackmd_install_dir }}"
      retries: 32
      changed_when: false

    - name: NPM update
      ansible.builtin.command: npm update
      args:
        chdir: "{{ hackmd_install_dir }}"
      changed_when: false

    - name: NPM fund
      ansible.builtin.command: npm fund
      args:
        chdir: "{{ hackmd_install_dir }}"
      changed_when: false

    - name: Build (take a while)
      ansible.builtin.command: npm run build
      args:
        chdir: "{{ hackmd_install_dir }}"
      changed_when: false

- name: "Create systemd for hackmd"
  ansible.builtin.template:
    src: hackmd.service
    dest: /etc/systemd/system/
    mode: '0644'
  notify: "rRestart hackmd"

- name: "Create env file"
  ansible.builtin.template:
    src: env.j2
    dest: "{{ hackmd_install_dir }}/env"
    mode: '0644'
  notify: "Restart hackmd"

- name: "Enable and Start hackmd.service"
  ansible.builtin.service:
    name: hackmd
    state: started
    enabled: true
    daemon_reload: true
